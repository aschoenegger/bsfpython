#
# Configuration file for the Python Bio.BSF.Analysis.VariantCalling.VariantCallingGATK
# library module.
#
# Configuration sections correspond to Python package names.
#


[Bio.BSF.Analyses.VariantCallingGATK]

# (Meaningful) Project Name (mandatory)

project_name =


# Analysis Input and Output Directories (optional)
#
# Analysis input and output directories can override standard paths
# from Bio.BSF.Configuration. Both, user and variable expansion gets
# applied. If, at that point, the path is still relative, default
# directory paths from Bio.BSF.Default get prepended. These
# options can therefore remain empty in typical cases and the output
# directory will be created in the standard location from the project
# name.
#
# input_directory =
# output_directory =


# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# debug = 0


# The genome assembly version corresponds to a resource directory
# holding the genome sequence and Bowtie 2 indices, as well as
# reference transcript annotation files. It is also the name of a new
# sub-directory under the analysis output directory and links to UCSC
# Genome Browser Track Hubs.

genome_version =


# e-Mail Address for UCSC Genome Browser Track Hubs

e_mail =


# The Sample Annotation Sheet (SAS) specifies a hierarchy of BSF
# ProcessedRunFolder, BSF Project, BSF Sample, BSF PairedReads and BSF
# Reads objects. Additionally, the file type (i.e. 'CASAVA' or
# 'External') can be specified for automatic discovery of objects in
# CASAVA-processed run folders.

sas_file =


# An optional sample annotation sheet prefix gets prepended to column
# names. It is useful to distinguish e.g. 'Control Sample' objects
# from 'Treatment Sample' objects defined on the same sample
# annotation sheet.
#
# sas_prefix =


# The comparison file specifies, which samples or groups should be
# compared.
# Not implemented yet.
#
# cmp_file =


# Align BSF Sample replicates in groups:
#   true (i.e. all replicates as a single BWA process) or
#   false (i.e. each BSF Sample replicate as a separate BWA process)

replicate_grouping = false


# snpEff genome database version

snpeff_genome_version = GRCh37.75


# GATK Bundle version

gatk_bundle_version = 2.8


# Genome database fasta file with indices for the Burrows Wheeler Aligner (BWA) and
# sequence dictionaries for Picard. It is convenient to create a sub-directory with
# symbolic links to the GATK bundle files and the BWA indices within the GATK bundle.

bwa_genome_db = indices_for_BWA_0_7/human_g1k_v37_decoy.fasta


# Comma-separated list of intervals to explicitly exclude from the analysis.
# For human, exclude the decoy sequence.

exclude_intervals = hs37d5


# Comma-separated list of intervals to explicitly include in the analysis.
#
# include_intervals =


# Comma-separated list of VCF files with known variant sites for the
# GATK RealignerTargetCreator and IndelRealigner steps.
# The GATK best practices documentation suggests using the
# Mills and 1000 Genomes gold standard insertion deletions for human.
# http://www.broadinstitute.org/gatk/guide/best-practices#data-processing-ovw

known_sites_realignment = 1000G_phase1.indels.b37.vcf,Mills_and_1000G_gold_standard.indels.b37.vcf


# Comma-separated list of VCF files with known variant sites for the
# GATK BaseRecalibrator and PrintReads steps.
# The GATK best practices documentation suggests using the
# current dbSNP version in addition to the
# Mills and 1000 Genomes gold standard insertion deletions for human.

known_sites_recalibration = dbsnp_138.b37.vcf,1000G_phase1.indels.b37.vcf,Mills_and_1000G_gold_standard.indels.b37.vcf


# Single VCF file of known sites for the
# GATK HaplotypeCaller and GenotypeGVCFs steps.

known_sites_discovery = dbsnp_138.b37.vcf

# What VQSR training sets / arguments should I use for my specific project?
# http://gatkforums.broadinstitute.org/discussion/1259

# Comma-separated list of Variant Quality Score Recalibration (VQSR) resources for SNP recalibration.
# Each resource has to correspond to a section named [vqsr_snp_*], below.

vqsr_resources_snp = hapmap,omni,1000G,dbsnp


# Comma-separated list of Variant Quality Score Recalibration (VQSR) annotations used for SNP recalibration.
# vqsr_annotations_snp = QD,MQ,MQRankSum,ReadPosRankSum,FS,DP,InbreedingCoeff
#
# ### IMPORTANT ###
# Depth of coverage (the DP annotation invoked by Coverage) should not be used when working with
# exome data sets since there is extreme variation in the depth to which targets are captured!
# In whole genome experiments this variation is indicative of error but that is not the case in
# capture experiments.
#
# ### IMPORTANT ###
# The InbreedingCoeff is a population level statistic that requires at least 10 samples in order to be
# computed. For projects with fewer samples please omit this annotation from the command line.

vqsr_annotations_snp = QD,MQ,MQRankSum,ReadPosRankSum,FS,DP,InbreedingCoeff


# Comma-separated list of Variant Quality Score Recalibration (VQSR) resources for INDEL recalibration.
# Each resource has to correspond to a section named [vqsr_indel_*], below.

vqsr_resources_indel = dbsnp


# Comma-separated list of Variant Quality Score Recalibration (VQSR) annotations used for SNP recalibration.

vqsr_annotations_indel = QD,DP,FS,ReadPosRankSum,MQRankSum,InbreedingCoeff


[vqsr_snp_hapmap]
known = false
training = true
truth = true
prior = 15.0
file_path = hapmap_3.3.b37.vcf

[vqsr_snp_omni]
known = false
training = true
truth = true
prior = 12.0
file_path = 1000G_omni2.5.b37.vcf

[vqsr_snp_1000G]
known = false
training = true
truth = false
prior = 10.0
file_path = 1000G_phase1.snps.high_confidence.b37.vcf

[vqsr_snp_dbsnp]
known = true
training = false
truth = false
prior = 2.0
file_path = dbsnp_138.b37.vcf

[vqsr_indel_dbsnp]
known = true
training = false
truth = false
prior = 2.0
file_path = dbsnp_138.b37.vcf


[Bio.BSF.DRMS]

# The General Distributed Resource Management System (DRMS)
# configuration section applies to all analyses in this configuration file.
# Specific sections, configuring specific Bio.BSF.Analysis objects,
# as well as Bio.BSF.DRMS objects follow below.


# DRMS Implementation (optional)
#
# The specific implementation of the DRMS to submit jobs into.
# Defaults to the value in Bio.BSF.Default.drms_implementation
# Examples are SGE or Bash.
#
# implementation =


# Memory Limits per Process (optional)
#
# Generally, the minimum free memory requirements have to be met,
# before a process is started by the DRMS.
# Defaults to the value in ...
#  ... Bio.BSF.Default.drms_memory_free_mem
#  ... Bio.BSF.Default.drms_memory_free_swap
#  ... Bio.BSF.Default.drms_memory_free_virtual
#
# memory_free_mem = 2G
# memory_free_swap = 2G
# memory_free_virtual = 2G
#
# The soft and hard memory limits warn and subsequently kill a process,
# respectively.
# Defaults to the value in ...
#  ... Bio.BSF.Default.drms_memory_limit_hard
#  ... Bio.BSF.Default.drms_memory_limit_soft
#
memory_hard = 8G
memory_soft = 8G


# DRMS Queue (optional)
#
# Defaults to the value in Bio.BSF.Default.drms_queue
#
# queue =


# DRMS Parallel Environment (optional)
#
# The parallel environment defines how multi-threaded processes are run.
# Values are depending on the DRMS implementation.
# Defaults to the value in Bio.BSF.Default.drms_parallel_environment
#
# parallel_environment =


# DRMS Threads (optional)
#
# The number of threads defines how many parallel processes can run
# in each parallel environment.
# Defaults to 1
#
# For Illumina2bam, that opens a lot of file handles for each cycle
# and each flow cell tile, set this to a higher number to avoid
# exceeding the limit of open file handles per user. See ulimit(1).
#
# threads =


[Bio.BSF.Analysis.DRMS]

[Bio.BSF.Analyses.VariantCalling.VariantCallingGATK.DRMS]

[Bio.BSF.Analyses.VariantCalling.VariantCallingGATK.DRMS.variant_calling_align_lane]

[Bio.BSF.Analyses.VariantCalling.VariantCallingGATK.DRMS.variant_calling_process_lane]
memory_hard = 12G
memory_soft = 12G
threads = 2

[Bio.BSF.Analyses.VariantCalling.VariantCallingGATK.DRMS.variant_calling_process_sample]

[Bio.BSF.Analyses.VariantCalling.VariantCallingGATK.DRMS.variant_calling_process_cohort]

[Bio.BSF.Executables.BWA]

[Bio.BSF.Executable.bsf_run_bwa.py]

[Bio.BSF.Executable.bsf_run_variant_calling_process_lane.py]

[Bio.BSF.Executable.bsf_run_variant_calling_process_sample.py]

[Bio.BSF.Executable.bsf_run_variant_calling_process_cohort.py]
